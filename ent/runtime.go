// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/Encedeus/panel/ent/apikey"
	"github.com/Encedeus/panel/ent/game"
	"github.com/Encedeus/panel/ent/node"
	"github.com/Encedeus/panel/ent/role"
	"github.com/Encedeus/panel/ent/schema"
	"github.com/Encedeus/panel/ent/server"
	"github.com/Encedeus/panel/ent/user"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	apikeyFields := schema.ApiKey{}.Fields()
	_ = apikeyFields
	// apikeyDescCreatedAt is the schema descriptor for created_at field.
	apikeyDescCreatedAt := apikeyFields[1].Descriptor()
	// apikey.DefaultCreatedAt holds the default value on creation for the created_at field.
	apikey.DefaultCreatedAt = apikeyDescCreatedAt.Default.(func() time.Time)
	// apikeyDescUpdatedAt is the schema descriptor for updated_at field.
	apikeyDescUpdatedAt := apikeyFields[2].Descriptor()
	// apikey.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	apikey.DefaultUpdatedAt = apikeyDescUpdatedAt.Default.(func() time.Time)
	// apikey.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	apikey.UpdateDefaultUpdatedAt = apikeyDescUpdatedAt.UpdateDefault.(func() time.Time)
	// apikeyDescKey is the schema descriptor for key field.
	apikeyDescKey := apikeyFields[5].Descriptor()
	// apikey.KeyValidator is a validator for the "key" field. It is called by the builders before save.
	apikey.KeyValidator = apikeyDescKey.Validators[0].(func(string) error)
	// apikeyDescID is the schema descriptor for id field.
	apikeyDescID := apikeyFields[0].Descriptor()
	// apikey.DefaultID holds the default value on creation for the id field.
	apikey.DefaultID = apikeyDescID.Default.(func() uuid.UUID)
	gameFields := schema.Game{}.Fields()
	_ = gameFields
	// gameDescCreatedAt is the schema descriptor for created_at field.
	gameDescCreatedAt := gameFields[1].Descriptor()
	// game.DefaultCreatedAt holds the default value on creation for the created_at field.
	game.DefaultCreatedAt = gameDescCreatedAt.Default.(func() time.Time)
	// gameDescUpdatedAt is the schema descriptor for updated_at field.
	gameDescUpdatedAt := gameFields[2].Descriptor()
	// game.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	game.DefaultUpdatedAt = gameDescUpdatedAt.Default.(func() time.Time)
	// game.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	game.UpdateDefaultUpdatedAt = gameDescUpdatedAt.UpdateDefault.(func() time.Time)
	// gameDescID is the schema descriptor for id field.
	gameDescID := gameFields[0].Descriptor()
	// game.DefaultID holds the default value on creation for the id field.
	game.DefaultID = gameDescID.Default.(func() uuid.UUID)
	nodeFields := schema.Node{}.Fields()
	_ = nodeFields
	// nodeDescCreatedAt is the schema descriptor for created_at field.
	nodeDescCreatedAt := nodeFields[1].Descriptor()
	// node.DefaultCreatedAt holds the default value on creation for the created_at field.
	node.DefaultCreatedAt = nodeDescCreatedAt.Default.(func() time.Time)
	// nodeDescUpdatedAt is the schema descriptor for updated_at field.
	nodeDescUpdatedAt := nodeFields[2].Descriptor()
	// node.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	node.DefaultUpdatedAt = nodeDescUpdatedAt.Default.(func() time.Time)
	// node.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	node.UpdateDefaultUpdatedAt = nodeDescUpdatedAt.UpdateDefault.(func() time.Time)
	// nodeDescID is the schema descriptor for id field.
	nodeDescID := nodeFields[0].Descriptor()
	// node.DefaultID holds the default value on creation for the id field.
	node.DefaultID = nodeDescID.Default.(func() uuid.UUID)
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescCreatedAt is the schema descriptor for created_at field.
	roleDescCreatedAt := roleFields[1].Descriptor()
	// role.DefaultCreatedAt holds the default value on creation for the created_at field.
	role.DefaultCreatedAt = roleDescCreatedAt.Default.(func() time.Time)
	// roleDescUpdatedAt is the schema descriptor for updated_at field.
	roleDescUpdatedAt := roleFields[2].Descriptor()
	// role.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	role.DefaultUpdatedAt = roleDescUpdatedAt.Default.(func() time.Time)
	// role.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	role.UpdateDefaultUpdatedAt = roleDescUpdatedAt.UpdateDefault.(func() time.Time)
	// roleDescName is the schema descriptor for name field.
	roleDescName := roleFields[4].Descriptor()
	// role.NameValidator is a validator for the "name" field. It is called by the builders before save.
	role.NameValidator = roleDescName.Validators[0].(func(string) error)
	// roleDescID is the schema descriptor for id field.
	roleDescID := roleFields[0].Descriptor()
	// role.DefaultID holds the default value on creation for the id field.
	role.DefaultID = roleDescID.Default.(func() uuid.UUID)
	serverFields := schema.Server{}.Fields()
	_ = serverFields
	// serverDescCreatedAt is the schema descriptor for created_at field.
	serverDescCreatedAt := serverFields[1].Descriptor()
	// server.DefaultCreatedAt holds the default value on creation for the created_at field.
	server.DefaultCreatedAt = serverDescCreatedAt.Default.(func() time.Time)
	// serverDescUpdatedAt is the schema descriptor for updated_at field.
	serverDescUpdatedAt := serverFields[2].Descriptor()
	// server.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	server.DefaultUpdatedAt = serverDescUpdatedAt.Default.(func() time.Time)
	// server.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	server.UpdateDefaultUpdatedAt = serverDescUpdatedAt.UpdateDefault.(func() time.Time)
	// serverDescID is the schema descriptor for id field.
	serverDescID := serverFields[0].Descriptor()
	// server.DefaultID holds the default value on creation for the id field.
	server.DefaultID = serverDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[1].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[2].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[4].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[6].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
